name: Build
on:
  push:
    branches: ["*"]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: ["main"]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      # Use docker.io for Docker Hub if empty
      REGISTRY: docker.io
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      # https://github.com/actions/cache/blob/main/examples.md#go---modules
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
      # Build binary
      - name: Build
        run: make build-all

      - name: Release
        # https://github.com/softprops/action-gh-release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: bin/modelx*

      # https://github.com/docker/setup-buildx-action
      - uses: docker/setup-buildx-action@v2
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      #  https://github.com/docker/metadata-action
      - name: Extract ModelXDL Docker metadata
        id: dlmeta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-dl
      # https://github.com/docker/build-push-action
      - name: Build and push ModelXDL Docker image
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.dlmeta.outputs.tags }}
          labels: ${{ steps.dlmeta.outputs.labels }}
          file: Dockerfile.dl